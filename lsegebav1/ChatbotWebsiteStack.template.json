{
 "Resources": {
  "Boto3Layer463A0AEA": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "CompatibleArchitectures": [
     "arm64"
    ],
    "CompatibleRuntimes": [
     "python3.12"
    ],
    "Content": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "26b5efc4f2995b12399dab3f40e2bf2b570fab909734b03503fd6b2d573e5b3e.zip"
    },
    "Description": "Boto3 library layer"
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/Boto3Layer/Resource",
    "aws:asset:path": "asset.26b5efc4f2995b12399dab3f40e2bf2b570fab909734b03503fd6b2d573e5b3e",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "GenAiChatbotS3BucketContentB7D39361": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "Tags": [
     {
      "Key": "auto-delete",
      "Value": "false"
     },
     {
      "Key": "auto-stop",
      "Value": "false"
     },
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     },
     {
      "Key": "aws-cdk:cr-owned:18dd7684",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/GenAiChatbotS3BucketContent/Resource"
   }
  },
  "GenAiChatbotS3BucketContentPolicy13890466": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "GenAiChatbotS3BucketContentB7D39361"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "GenAiChatbotS3BucketContentB7D39361",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "GenAiChatbotS3BucketContentB7D39361",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:PutBucketPolicy"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "GenAiChatbotS3BucketContentB7D39361",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "GenAiChatbotS3BucketContentB7D39361",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:GetObject",
       "Condition": {
        "StringEquals": {
         "AWS:SourceArn": {
          "Fn::Join": [
           "",
           [
            "arn:aws:cloudfront::",
            {
             "Ref": "AWS::AccountId"
            },
            ":distribution/",
            {
             "Ref": "CloudfrontDistCloudFrontDistribution82176F0F"
            }
           ]
          ]
         }
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Service": "cloudfront.amazonaws.com"
       },
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "GenAiChatbotS3BucketContentB7D39361",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/GenAiChatbotS3BucketContent/Policy/Resource",
    "cfn_nag": {
     "rules_to_suppress": [
      {
       "id": "F16",
       "reason": "Public website bucket policy requires a wildcard principal"
      }
     ]
    }
   }
  },
  "GenAiChatbotS3BucketContentAutoDeleteObjectsCustomResource66B8F56E": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "GenAiChatbotS3BucketContentB7D39361"
    }
   },
   "DependsOn": [
    "GenAiChatbotS3BucketContentPolicy13890466"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/GenAiChatbotS3BucketContent/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": {
     "Fn::FindInMap": [
      "LatestNodeRuntimeMap",
      {
       "Ref": "AWS::Region"
      },
      "value"
     ]
    },
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "GenAiChatbotS3BucketContentB7D39361"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6",
    "aws:asset:property": "Code"
   }
  },
  "ConversationHistoryBucketB31BE2E7": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "Tags": [
     {
      "Key": "auto-delete",
      "Value": "false"
     },
     {
      "Key": "auto-stop",
      "Value": "false"
     },
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/ConversationHistoryBucket/Resource"
   }
  },
  "ConversationHistoryBucketPolicy5E82EC71": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "ConversationHistoryBucketB31BE2E7"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "ConversationHistoryBucketB31BE2E7",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ConversationHistoryBucketB31BE2E7",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:PutBucketPolicy"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "ConversationHistoryBucketB31BE2E7",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ConversationHistoryBucketB31BE2E7",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/ConversationHistoryBucket/Policy/Resource"
   }
  },
  "ConversationHistoryBucketAutoDeleteObjectsCustomResource4D6F6E01": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "ConversationHistoryBucketB31BE2E7"
    }
   },
   "DependsOn": [
    "ConversationHistoryBucketPolicy5E82EC71"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/ConversationHistoryBucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "GenAiChatbotS3BucketAgentSchemasC54BDB1B": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "Tags": [
     {
      "Key": "auto-delete",
      "Value": "false"
     },
     {
      "Key": "auto-stop",
      "Value": "false"
     },
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     },
     {
      "Key": "aws-cdk:cr-owned:d0487702",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/GenAiChatbotS3BucketAgentSchemas/Resource"
   }
  },
  "GenAiChatbotS3BucketAgentSchemasPolicyAC219EAC": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "GenAiChatbotS3BucketAgentSchemasC54BDB1B"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "GenAiChatbotS3BucketAgentSchemasC54BDB1B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "GenAiChatbotS3BucketAgentSchemasC54BDB1B",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:PutBucketPolicy"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "GenAiChatbotS3BucketAgentSchemasC54BDB1B",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "GenAiChatbotS3BucketAgentSchemasC54BDB1B",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/GenAiChatbotS3BucketAgentSchemas/Policy/Resource"
   }
  },
  "GenAiChatbotS3BucketAgentSchemasAutoDeleteObjectsCustomResource491D6C10": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "GenAiChatbotS3BucketAgentSchemasC54BDB1B"
    }
   },
   "DependsOn": [
    "GenAiChatbotS3BucketAgentSchemasPolicyAC219EAC"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/GenAiChatbotS3BucketAgentSchemas/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "GeneratedImagesBucketC3465633": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "Tags": [
     {
      "Key": "auto-delete",
      "Value": "false"
     },
     {
      "Key": "auto-stop",
      "Value": "false"
     },
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/GeneratedImagesBucket/Resource"
   }
  },
  "GeneratedImagesBucketPolicyA72A6FC9": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "GeneratedImagesBucketC3465633"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "GeneratedImagesBucketC3465633",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "GeneratedImagesBucketC3465633",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:PutBucketPolicy"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "GeneratedImagesBucketC3465633",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "GeneratedImagesBucketC3465633",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Principal": {
        "CanonicalUser": {
         "Fn::GetAtt": [
          "ImageBucketOAIAF49CF4B",
          "S3CanonicalUserId"
         ]
        }
       },
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "GeneratedImagesBucketC3465633",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      },
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Principal": {
        "CanonicalUser": {
         "Fn::GetAtt": [
          "ImageBucketOAIAF49CF4B",
          "S3CanonicalUserId"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "GeneratedImagesBucketC3465633",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "GeneratedImagesBucketC3465633",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/GeneratedImagesBucket/Policy/Resource"
   }
  },
  "GeneratedImagesBucketAutoDeleteObjectsCustomResource907225F0": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "GeneratedImagesBucketC3465633"
    }
   },
   "DependsOn": [
    "GeneratedImagesBucketPolicyA72A6FC9"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/GeneratedImagesBucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "s3FilesDeploymentSchemaAwsCliLayerCE2D790D": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "Content": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "3322b7049fb0ed2b7cbb644a2ada8d1116ff80c32dca89e6ada846b5de26f961.zip"
    },
    "Description": "/opt/awscli/aws"
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/s3FilesDeploymentSchema/AwsCliLayer/Resource",
    "aws:asset:path": "asset.3322b7049fb0ed2b7cbb644a2ada8d1116ff80c32dca89e6ada846b5de26f961.zip",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "s3FilesDeploymentSchemaCustomResource49D100D0": {
   "Type": "Custom::CDKBucketDeployment",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
      "Arn"
     ]
    },
    "SourceBucketNames": [
     {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     }
    ],
    "SourceObjectKeys": [
     "47201948d6ee427742e036f1e3ae9ed890880e73d738838c5f6f9c780b930c44.zip"
    ],
    "DestinationBucketName": {
     "Ref": "GenAiChatbotS3BucketAgentSchemasC54BDB1B"
    },
    "Prune": true
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/s3FilesDeploymentSchema/CustomResource/Default"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "auto-delete",
      "Value": "false"
     },
     {
      "Key": "auto-stop",
      "Value": "false"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/Resource"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":s3:::",
           {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
           }
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "GenAiChatbotS3BucketAgentSchemasC54BDB1B",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "GenAiChatbotS3BucketContentB7D39361",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "GenAiChatbotS3BucketAgentSchemasC54BDB1B",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "GenAiChatbotS3BucketContentB7D39361",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
    "Roles": [
     {
      "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "0158f40002a8c211635388a87874fd4dcc3d68f525fe08a0fe0f014069ae539c.zip"
    },
    "Environment": {
     "Variables": {
      "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem"
     }
    },
    "Handler": "index.handler",
    "Layers": [
     {
      "Ref": "s3FilesDeploymentSchemaAwsCliLayerCE2D790D"
     }
    ],
    "Role": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Tags": [
     {
      "Key": "auto-delete",
      "Value": "false"
     },
     {
      "Key": "auto-stop",
      "Value": "false"
     }
    ],
    "Timeout": 900
   },
   "DependsOn": [
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
   ],
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource",
    "aws:asset:path": "asset.0158f40002a8c211635388a87874fd4dcc3d68f525fe08a0fe0f014069ae539c",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CloudfrontDistCloudfrontLoggingBucketAccessLog2F282186": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "AES256"
       }
      }
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "Tags": [
     {
      "Key": "auto-delete",
      "Value": "false"
     },
     {
      "Key": "auto-stop",
      "Value": "false"
     }
    ],
    "VersioningConfiguration": {
     "Status": "Enabled"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/CloudfrontDist/CloudfrontLoggingBucketAccessLog/Resource",
    "cfn_nag": {
     "rules_to_suppress": [
      {
       "id": "W35",
       "reason": "This S3 bucket is used as the access logging bucket for another bucket"
      }
     ]
    }
   }
  },
  "CloudfrontDistCloudfrontLoggingBucketAccessLogPolicy91AEA38C": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "CloudfrontDistCloudfrontLoggingBucketAccessLog2F282186"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "CloudfrontDistCloudfrontLoggingBucketAccessLog2F282186",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "CloudfrontDistCloudfrontLoggingBucketAccessLog2F282186",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:PutObject",
       "Condition": {
        "ArnLike": {
         "aws:SourceArn": {
          "Fn::GetAtt": [
           "CloudfrontDistCloudfrontLoggingBucketB8F19B13",
           "Arn"
          ]
         }
        },
        "StringEquals": {
         "aws:SourceAccount": {
          "Ref": "AWS::AccountId"
         }
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Service": "logging.s3.amazonaws.com"
       },
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "CloudfrontDistCloudfrontLoggingBucketAccessLog2F282186",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/CloudfrontDist/CloudfrontLoggingBucketAccessLog/Policy/Resource"
   }
  },
  "CloudfrontDistCloudfrontLoggingBucketB8F19B13": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "AccessControl": "LogDeliveryWrite",
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "AES256"
       }
      }
     ]
    },
    "LoggingConfiguration": {
     "DestinationBucketName": {
      "Ref": "CloudfrontDistCloudfrontLoggingBucketAccessLog2F282186"
     }
    },
    "OwnershipControls": {
     "Rules": [
      {
       "ObjectOwnership": "ObjectWriter"
      }
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "Tags": [
     {
      "Key": "auto-delete",
      "Value": "false"
     },
     {
      "Key": "auto-stop",
      "Value": "false"
     }
    ],
    "VersioningConfiguration": {
     "Status": "Enabled"
    }
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/CloudfrontDist/CloudfrontLoggingBucket/Resource"
   }
  },
  "CloudfrontDistCloudfrontLoggingBucketPolicy9B96ED8D": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "CloudfrontDistCloudfrontLoggingBucketB8F19B13"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "CloudfrontDistCloudfrontLoggingBucketB8F19B13",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "CloudfrontDistCloudfrontLoggingBucketB8F19B13",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/CloudfrontDist/CloudfrontLoggingBucket/Policy/Resource"
   }
  },
  "CloudfrontDistCloudFrontOac3815B52F": {
   "Type": "AWS::CloudFront::OriginAccessControl",
   "Properties": {
    "OriginAccessControlConfig": {
     "Description": "Origin access control provisioned by aws-cloudfront-s3",
     "Name": {
      "Fn::Join": [
       "",
       [
        "aws-cloudfront-s3-CloutDist-",
        {
         "Fn::Select": [
          2,
          {
           "Fn::Split": [
            "/",
            {
             "Ref": "AWS::StackId"
            }
           ]
          }
         ]
        }
       ]
      ]
     },
     "OriginAccessControlOriginType": "s3",
     "SigningBehavior": "always",
     "SigningProtocol": "sigv4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/CloudfrontDist/CloudFrontOac"
   }
  },
  "CloudfrontDistCloudFrontDistribution82176F0F": {
   "Type": "AWS::CloudFront::Distribution",
   "Properties": {
    "DistributionConfig": {
     "CacheBehaviors": [
      {
       "CachePolicyId": "4135ea2d-6df8-44a3-9df3-4b5a84be39ad",
       "Compress": true,
       "OriginRequestPolicyId": "88a5eaf4-2fd4-4709-b370-b4c650ea3fcf",
       "PathPattern": "/images/*",
       "TargetOriginId": "ChatbotWebsiteStackCloudfrontDistCloudFrontDistributionOrigin2F7079486",
       "ViewerProtocolPolicy": "redirect-to-https"
      }
     ],
     "Comment": "GenAiChatbot Website",
     "DefaultCacheBehavior": {
      "CachePolicyId": "4135ea2d-6df8-44a3-9df3-4b5a84be39ad",
      "Compress": true,
      "OriginRequestPolicyId": "88a5eaf4-2fd4-4709-b370-b4c650ea3fcf",
      "TargetOriginId": "ChatbotWebsiteStackCloudfrontDistCloudFrontDistributionOrigin171E0405D",
      "ViewerProtocolPolicy": "redirect-to-https"
     },
     "DefaultRootObject": "index.html",
     "Enabled": true,
     "HttpVersion": "http2",
     "IPV6Enabled": true,
     "Logging": {
      "Bucket": {
       "Fn::GetAtt": [
        "CloudfrontDistCloudfrontLoggingBucketB8F19B13",
        "RegionalDomainName"
       ]
      }
     },
     "Origins": [
      {
       "DomainName": {
        "Fn::GetAtt": [
         "GenAiChatbotS3BucketContentB7D39361",
         "RegionalDomainName"
        ]
       },
       "Id": "ChatbotWebsiteStackCloudfrontDistCloudFrontDistributionOrigin171E0405D",
       "OriginAccessControlId": {
        "Fn::GetAtt": [
         "CloudfrontDistCloudFrontOac3815B52F",
         "Id"
        ]
       },
       "S3OriginConfig": {
        "OriginAccessIdentity": ""
       }
      },
      {
       "DomainName": {
        "Fn::GetAtt": [
         "GeneratedImagesBucketC3465633",
         "RegionalDomainName"
        ]
       },
       "Id": "ChatbotWebsiteStackCloudfrontDistCloudFrontDistributionOrigin2F7079486",
       "S3OriginConfig": {
        "OriginAccessIdentity": {
         "Fn::Join": [
          "",
          [
           "origin-access-identity/cloudfront/",
           {
            "Ref": "ImageBucketOAIAF49CF4B"
           }
          ]
         ]
        }
       }
      }
     ]
    },
    "Tags": [
     {
      "Key": "auto-delete",
      "Value": "false"
     },
     {
      "Key": "auto-stop",
      "Value": "false"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/CloudfrontDist/CloudFrontDistribution/Resource",
    "cfn_nag": {
     "rules_to_suppress": [
      {
       "id": "W70",
       "reason": "Since the distribution uses the CloudFront domain name, CloudFront automatically sets the security policy to TLSv1 regardless of the value of MinimumProtocolVersion"
      }
     ]
    }
   }
  },
  "ImageBucketOAIAF49CF4B": {
   "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
   "Properties": {
    "CloudFrontOriginAccessIdentityConfig": {
     "Comment": "Allows CloudFront to reach the bucket"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/ImageBucketOAI/Resource"
   }
  },
  "dynamodbbedrockusagetable615894B3": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "user_id",
      "AttributeType": "S"
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "user_id",
      "KeyType": "HASH"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    },
    "Tags": [
     {
      "Key": "auto-delete",
      "Value": "false"
     },
     {
      "Key": "auto-stop",
      "Value": "false"
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/dynamodb_bedrock_usage_table/Resource"
   }
  },
  "dynamodbconversationstableD07DAB94": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "session_id",
      "AttributeType": "S"
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "session_id",
      "KeyType": "HASH"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    },
    "Tags": [
     {
      "Key": "auto-delete",
      "Value": "false"
     },
     {
      "Key": "auto-stop",
      "Value": "false"
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/dynamodb_conversations_table/Resource"
   }
  },
  "dynamodbincidentstable897D357D": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "incident_id",
      "AttributeType": "S"
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "incident_id",
      "KeyType": "HASH"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    },
    "Tags": [
     {
      "Key": "auto-delete",
      "Value": "false"
     },
     {
      "Key": "auto-stop",
      "Value": "false"
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/dynamodb_incidents_table/Resource"
   }
  },
  "dynamodbconfigurationstable80D5F9C5": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "user",
      "AttributeType": "S"
     },
     {
      "AttributeName": "config_type",
      "AttributeType": "S"
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "user",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "config_type",
      "KeyType": "RANGE"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    },
    "Tags": [
     {
      "Key": "auto-delete",
      "Value": "false"
     },
     {
      "Key": "auto-stop",
      "Value": "false"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/dynamodb_configurations_table/Resource"
   }
  },
  "ChatbotWebSocketApi72B63158": {
   "Type": "AWS::ApiGatewayV2::Api",
   "Properties": {
    "Name": "ChatbotWebSocketApi",
    "ProtocolType": "WEBSOCKET",
    "RouteSelectionExpression": "$request.body.action",
    "Tags": {
     "auto-delete": "false",
     "auto-stop": "false"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/ChatbotWebSocketApi/Resource"
   }
  },
  "ChatbotWebSocketApiconfigRouteConfigFnIntegrationPermission7D4BADD6": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "genaibedrockconfigfnB3FE3CF8",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ChatbotWebSocketApi72B63158"
       },
       "/*config"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/ChatbotWebSocketApi/config-Route/ConfigFnIntegration-Permission"
   }
  },
  "ChatbotWebSocketApiconfigRouteConfigFnIntegrationEA99D9F9": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotWebSocketApi72B63158"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":apigateway:",
       {
        "Ref": "AWS::Region"
       },
       ":lambda:path/2015-03-31/functions/",
       {
        "Fn::GetAtt": [
         "genaibedrockconfigfnB3FE3CF8",
         "Arn"
        ]
       },
       "/invocations"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/ChatbotWebSocketApi/config-Route/ConfigFnIntegration/Resource"
   }
  },
  "ChatbotWebSocketApiconfigRouteCE42F2B6": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotWebSocketApi72B63158"
    },
    "AuthorizationType": "NONE",
    "RouteKey": "config",
    "RouteResponseSelectionExpression": "$default",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "ChatbotWebSocketApiconfigRouteConfigFnIntegrationEA99D9F9"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/ChatbotWebSocketApi/config-Route/Resource"
   }
  },
  "ChatbotWebSocketApiconfigRouteResponse412C1DF1": {
   "Type": "AWS::ApiGatewayV2::RouteResponse",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotWebSocketApi72B63158"
    },
    "RouteId": {
     "Ref": "ChatbotWebSocketApiconfigRouteCE42F2B6"
    },
    "RouteResponseKey": "$default"
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/ChatbotWebSocketApi/config-Route/Response"
   }
  },
  "ChatbotWebSocketApidefaultRouteBedrockFnIntegrationPermission9109716D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "genaibedrockrouterfn5C0CB3B0",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "ChatbotWebSocketApi72B63158"
       },
       "/*$default"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/ChatbotWebSocketApi/$default-Route/BedrockFnIntegration-Permission"
   }
  },
  "ChatbotWebSocketApidefaultRouteBedrockFnIntegrationF55AD05C": {
   "Type": "AWS::ApiGatewayV2::Integration",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotWebSocketApi72B63158"
    },
    "IntegrationType": "AWS_PROXY",
    "IntegrationUri": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":apigateway:",
       {
        "Ref": "AWS::Region"
       },
       ":lambda:path/2015-03-31/functions/",
       {
        "Fn::GetAtt": [
         "genaibedrockrouterfn5C0CB3B0",
         "Arn"
        ]
       },
       "/invocations"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/ChatbotWebSocketApi/$default-Route/BedrockFnIntegration/Resource"
   }
  },
  "ChatbotWebSocketApidefaultRoute98A78F7F": {
   "Type": "AWS::ApiGatewayV2::Route",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotWebSocketApi72B63158"
    },
    "AuthorizationType": "NONE",
    "RouteKey": "$default",
    "RouteResponseSelectionExpression": "$default",
    "Target": {
     "Fn::Join": [
      "",
      [
       "integrations/",
       {
        "Ref": "ChatbotWebSocketApidefaultRouteBedrockFnIntegrationF55AD05C"
       }
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/ChatbotWebSocketApi/$default-Route/Resource"
   }
  },
  "ChatbotWebSocketApidefaultRouteResponse85F620BE": {
   "Type": "AWS::ApiGatewayV2::RouteResponse",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotWebSocketApi72B63158"
    },
    "RouteId": {
     "Ref": "ChatbotWebSocketApidefaultRoute98A78F7F"
    },
    "RouteResponseKey": "$default"
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/ChatbotWebSocketApi/$default-Route/Response"
   }
  },
  "mystage114C35EC": {
   "Type": "AWS::ApiGatewayV2::Stage",
   "Properties": {
    "ApiId": {
     "Ref": "ChatbotWebSocketApi72B63158"
    },
    "AutoDeploy": true,
    "StageName": "ws",
    "Tags": {
     "auto-delete": "false",
     "auto-stop": "false"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/mystage/Resource"
   }
  },
  "ImageGenerationFunctionServiceRole7C68AEC3": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonBedrockFullAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonAPIGatewayInvokeFullAccess"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "auto-delete",
      "Value": "false"
     },
     {
      "Key": "auto-stop",
      "Value": "false"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/ImageGenerationFunction/ServiceRole/Resource"
   }
  },
  "ImageGenerationFunctionServiceRoleDefaultPolicy57CF8037": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "xray:PutTelemetryRecords",
        "xray:PutTraceSegments"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "GeneratedImagesBucketC3465633",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "GeneratedImagesBucketC3465633",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ImageGenerationFunctionServiceRoleDefaultPolicy57CF8037",
    "Roles": [
     {
      "Ref": "ImageGenerationFunctionServiceRole7C68AEC3"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/ImageGenerationFunction/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "ImageGenerationFunction64C380B8": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "7be59538e339cd5e68bfd8d4c91306fec1aa5f3ba6593f5a77ac8fcb3585cb7a.zip"
    },
    "Environment": {
     "Variables": {
      "WEBSOCKET_API_ENDPOINT": {
       "Fn::GetAtt": [
        "ChatbotWebSocketApi72B63158",
        "ApiEndpoint"
       ]
      },
      "S3_IMAGE_BUCKET_NAME": {
       "Ref": "GeneratedImagesBucketC3465633"
      },
      "CLOUDFRONT_DOMAIN": {
       "Fn::GetAtt": [
        "CloudfrontDistCloudFrontDistribution82176F0F",
        "DomainName"
       ]
      }
     }
    },
    "Handler": "lambda_function.lambda_handler",
    "Layers": [
     {
      "Ref": "Boto3Layer463A0AEA"
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:aws:lambda:",
        {
         "Ref": "AWS::Region"
        },
        ":580247275435:layer:LambdaInsightsExtension-Arm64:20"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:aws:lambda:",
        {
         "Ref": "AWS::Region"
        },
        ":017000801446:layer:AWSLambdaPowertoolsPythonV2-Arm64:69"
       ]
      ]
     }
    ],
    "MemorySize": 1024,
    "Role": {
     "Fn::GetAtt": [
      "ImageGenerationFunctionServiceRole7C68AEC3",
      "Arn"
     ]
    },
    "Runtime": "python3.12",
    "Tags": [
     {
      "Key": "auto-delete",
      "Value": "false"
     },
     {
      "Key": "auto-stop",
      "Value": "false"
     }
    ],
    "Timeout": 300,
    "TracingConfig": {
     "Mode": "Active"
    }
   },
   "DependsOn": [
    "ImageGenerationFunctionServiceRoleDefaultPolicy57CF8037",
    "ImageGenerationFunctionServiceRole7C68AEC3"
   ],
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/ImageGenerationFunction/Resource",
    "aws:asset:path": "asset.7be59538e339cd5e68bfd8d4c91306fec1aa5f3ba6593f5a77ac8fcb3585cb7a",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "ImageGenerationFunctionLogRetentionCE594F78": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "ImageGenerationFunction64C380B8"
       }
      ]
     ]
    },
    "RetentionInDays": 5
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/ImageGenerationFunction/LogRetention/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "auto-delete",
      "Value": "false"
     },
     {
      "Key": "auto-stop",
      "Value": "false"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:DeleteRetentionPolicy",
        "logs:PutRetentionPolicy"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "Roles": [
     {
      "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Handler": "index.handler",
    "Runtime": {
     "Fn::FindInMap": [
      "LatestNodeRuntimeMap",
      {
       "Ref": "AWS::Region"
      },
      "value"
     ]
    },
    "Timeout": 900,
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "4e26bf2d0a26f2097fb2b261f22bb51e3f6b4b52635777b1e54edbd8e2d58c35.zip"
    },
    "Role": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      "Arn"
     ]
    },
    "Tags": [
     {
      "Key": "auto-delete",
      "Value": "false"
     },
     {
      "Key": "auto-stop",
      "Value": "false"
     }
    ]
   },
   "DependsOn": [
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB"
   ],
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource",
    "aws:asset:path": "asset.4e26bf2d0a26f2097fb2b261f22bb51e3f6b4b52635777b1e54edbd8e2d58c35",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "genaibedrockconfigfnServiceRoleDAEBAE9E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonBedrockReadOnly"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "auto-delete",
      "Value": "false"
     },
     {
      "Key": "auto-stop",
      "Value": "false"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/genai_bedrock_config_fn/ServiceRole/Resource"
   }
  },
  "genaibedrockconfigfnServiceRoleDefaultPolicyA197094A": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "xray:PutTelemetryRecords",
        "xray:PutTraceSegments"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "dynamodb:*",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "dynamodbconfigurationstable80D5F9C5",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "genaibedrockconfigfnServiceRoleDefaultPolicyA197094A",
    "Roles": [
     {
      "Ref": "genaibedrockconfigfnServiceRoleDAEBAE9E"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/genai_bedrock_config_fn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "genaibedrockconfigfnB3FE3CF8": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "d0404d1ad6bc199c8ed97548f4369fb57d5887409bbe9c1cf647b350031cd5b6.zip"
    },
    "Environment": {
     "Variables": {
      "DYNAMODB_TABLE": {
       "Ref": "dynamodbconfigurationstable80D5F9C5"
      },
      "ALLOWLIST_DOMAIN": "@lseg.com",
      "REGION": {
       "Ref": "AWS::Region"
      },
      "POWERTOOLS_SERVICE_NAME": "CONFIG_SERVICE"
     }
    },
    "Handler": "lambda_function.lambda_handler",
    "Layers": [
     {
      "Ref": "Boto3Layer463A0AEA"
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:aws:lambda:",
        {
         "Ref": "AWS::Region"
        },
        ":580247275435:layer:LambdaInsightsExtension-Arm64:20"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:aws:lambda:",
        {
         "Ref": "AWS::Region"
        },
        ":017000801446:layer:AWSLambdaPowertoolsPythonV2-Arm64:69"
       ]
      ]
     }
    ],
    "MemorySize": 1024,
    "Role": {
     "Fn::GetAtt": [
      "genaibedrockconfigfnServiceRoleDAEBAE9E",
      "Arn"
     ]
    },
    "Runtime": "python3.12",
    "Tags": [
     {
      "Key": "auto-delete",
      "Value": "false"
     },
     {
      "Key": "auto-stop",
      "Value": "false"
     }
    ],
    "Timeout": 30,
    "TracingConfig": {
     "Mode": "Active"
    }
   },
   "DependsOn": [
    "genaibedrockconfigfnServiceRoleDefaultPolicyA197094A",
    "genaibedrockconfigfnServiceRoleDAEBAE9E"
   ],
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/genai_bedrock_config_fn/Resource",
    "aws:asset:path": "asset.d0404d1ad6bc199c8ed97548f4369fb57d5887409bbe9c1cf647b350031cd5b6",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "genaibedrockconfigfnLogRetention25DB6582": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "genaibedrockconfigfnB3FE3CF8"
       }
      ]
     ]
    },
    "RetentionInDays": 5
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/genai_bedrock_config_fn/LogRetention/Resource"
   }
  },
  "genaibedrockagentsclientfnServiceRole924D9F7B": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonBedrockFullAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonAPIGatewayInvokeFullAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonSQSFullAccess"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "auto-delete",
      "Value": "false"
     },
     {
      "Key": "auto-stop",
      "Value": "false"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/genai_bedrock_agents_client_fn/ServiceRole/Resource"
   }
  },
  "genaibedrockagentsclientfnServiceRoleDefaultPolicy2E00018F": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "xray:PutTelemetryRecords",
        "xray:PutTraceSegments"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "dynamodb:*",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "dynamodbconversationstableD07DAB94",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "dynamodbincidentstable897D357D",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ConversationHistoryBucketB31BE2E7",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ConversationHistoryBucketB31BE2E7",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable",
        "dynamodb:GetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:Scan"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "dynamodbconfigurationstable80D5F9C5",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "genaibedrockagentsclientfnServiceRoleDefaultPolicy2E00018F",
    "Roles": [
     {
      "Ref": "genaibedrockagentsclientfnServiceRole924D9F7B"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/genai_bedrock_agents_client_fn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "genaibedrockagentsclientfn3E452070": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "30248ef389ade96083bef340446e9c06df8d75e07a27161d187388c1e1116767.zip"
    },
    "Environment": {
     "Variables": {
      "DYNAMODB_TABLE": {
       "Ref": "dynamodbconfigurationstable80D5F9C5"
      },
      "WEBSOCKET_API_ENDPOINT": {
       "Fn::GetAtt": [
        "ChatbotWebSocketApi72B63158",
        "ApiEndpoint"
       ]
      },
      "POWERTOOLS_SERVICE_NAME": "AGENTS_CLIENT_SERVICE"
     }
    },
    "Handler": "lambda_function.lambda_handler",
    "Layers": [
     {
      "Ref": "Boto3Layer463A0AEA"
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:aws:lambda:",
        {
         "Ref": "AWS::Region"
        },
        ":580247275435:layer:LambdaInsightsExtension-Arm64:20"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:aws:lambda:",
        {
         "Ref": "AWS::Region"
        },
        ":017000801446:layer:AWSLambdaPowertoolsPythonV2-Arm64:69"
       ]
      ]
     }
    ],
    "MemorySize": 1024,
    "Role": {
     "Fn::GetAtt": [
      "genaibedrockagentsclientfnServiceRole924D9F7B",
      "Arn"
     ]
    },
    "Runtime": "python3.12",
    "Tags": [
     {
      "Key": "auto-delete",
      "Value": "false"
     },
     {
      "Key": "auto-stop",
      "Value": "false"
     }
    ],
    "Timeout": 900,
    "TracingConfig": {
     "Mode": "Active"
    }
   },
   "DependsOn": [
    "genaibedrockagentsclientfnServiceRoleDefaultPolicy2E00018F",
    "genaibedrockagentsclientfnServiceRole924D9F7B"
   ],
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/genai_bedrock_agents_client_fn/Resource",
    "aws:asset:path": "asset.30248ef389ade96083bef340446e9c06df8d75e07a27161d187388c1e1116767",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "genaibedrockagentsclientfnLogRetention79CC117F": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "genaibedrockagentsclientfn3E452070"
       }
      ]
     ]
    },
    "RetentionInDays": 5
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/genai_bedrock_agents_client_fn/LogRetention/Resource"
   }
  },
  "genaibedrockagentsfnServiceRole82AD3769": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "auto-delete",
      "Value": "false"
     },
     {
      "Key": "auto-stop",
      "Value": "false"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/genai_bedrock_agents_fn/ServiceRole/Resource"
   }
  },
  "genaibedrockagentsfnServiceRoleDefaultPolicyE39EE3A2": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "xray:PutTelemetryRecords",
        "xray:PutTraceSegments"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "dynamodb:*",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "dynamodbincidentstable897D357D",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "genaibedrockagentsfnServiceRoleDefaultPolicyE39EE3A2",
    "Roles": [
     {
      "Ref": "genaibedrockagentsfnServiceRole82AD3769"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/genai_bedrock_agents_fn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "genaibedrockagentsfn315D8BE9": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "afdcf290de316d5432f976edf24c634a0e32788afcb32130569685eb94b98ee9.zip"
    },
    "Environment": {
     "Variables": {
      "DYNAMODB_TABLE": {
       "Ref": "dynamodbincidentstable897D357D"
      },
      "POWERTOOLS_SERVICE_NAME": "AGENTS_SERVICE"
     }
    },
    "Handler": "lambda_function.lambda_handler",
    "Layers": [
     {
      "Ref": "Boto3Layer463A0AEA"
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:aws:lambda:",
        {
         "Ref": "AWS::Region"
        },
        ":580247275435:layer:LambdaInsightsExtension-Arm64:20"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:aws:lambda:",
        {
         "Ref": "AWS::Region"
        },
        ":017000801446:layer:AWSLambdaPowertoolsPythonV2-Arm64:69"
       ]
      ]
     }
    ],
    "MemorySize": 1024,
    "Role": {
     "Fn::GetAtt": [
      "genaibedrockagentsfnServiceRole82AD3769",
      "Arn"
     ]
    },
    "Runtime": "python3.12",
    "Tags": [
     {
      "Key": "auto-delete",
      "Value": "false"
     },
     {
      "Key": "auto-stop",
      "Value": "false"
     }
    ],
    "Timeout": 120,
    "TracingConfig": {
     "Mode": "Active"
    }
   },
   "DependsOn": [
    "genaibedrockagentsfnServiceRoleDefaultPolicyE39EE3A2",
    "genaibedrockagentsfnServiceRole82AD3769"
   ],
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/genai_bedrock_agents_fn/Resource",
    "aws:asset:path": "asset.afdcf290de316d5432f976edf24c634a0e32788afcb32130569685eb94b98ee9",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "genaibedrockagentsfnLogRetentionDB78A63F": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "genaibedrockagentsfn315D8BE9"
       }
      ]
     ]
    },
    "RetentionInDays": 5
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/genai_bedrock_agents_fn/LogRetention/Resource"
   }
  },
  "genaibedrockagentsfnAllowBedrock3851BC47": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "genaibedrockagentsfn315D8BE9",
      "Arn"
     ]
    },
    "Principal": "bedrock.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:bedrock:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":agent/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/genai_bedrock_agents_fn/AllowBedrock"
   }
  },
  "genaibedrockfnasyncServiceRoleED3F0257": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonBedrockFullAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonAPIGatewayInvokeFullAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonSQSFullAccess"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "auto-delete",
      "Value": "false"
     },
     {
      "Key": "auto-stop",
      "Value": "false"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/genai_bedrock_fn_async/ServiceRole/Resource"
   }
  },
  "genaibedrockfnasyncServiceRoleDefaultPolicy939E6430": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "xray:PutTelemetryRecords",
        "xray:PutTraceSegments"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "dynamodb:*",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "dynamodbbedrockusagetable615894B3",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "dynamodbconfigurationstable80D5F9C5",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "dynamodbconversationstableD07DAB94",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ConversationHistoryBucketB31BE2E7",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ConversationHistoryBucketB31BE2E7",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "genaibedrockfnasyncServiceRoleDefaultPolicy939E6430",
    "Roles": [
     {
      "Ref": "genaibedrockfnasyncServiceRoleED3F0257"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/genai_bedrock_fn_async/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "genaibedrockfnasync7C01F7BC": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "6f1efd4e98059c8570288abb717723ea44d77e29b46ce7c6ff443f0e1adc2ee1.zip"
    },
    "Environment": {
     "Variables": {
      "DYNAMODB_TABLE": {
       "Ref": "dynamodbconversationstableD07DAB94"
      },
      "CONVERSATION_HISTORY_BUCKET": {
       "Ref": "ConversationHistoryBucketB31BE2E7"
      },
      "WEBSOCKET_API_ENDPOINT": {
       "Fn::GetAtt": [
        "ChatbotWebSocketApi72B63158",
        "ApiEndpoint"
       ]
      },
      "DYNAMODB_TABLE_CONFIG": {
       "Ref": "dynamodbconfigurationstable80D5F9C5"
      },
      "DYNAMODB_TABLE_USAGE": {
       "Ref": "dynamodbbedrockusagetable615894B3"
      },
      "REGION": {
       "Ref": "AWS::Region"
      },
      "POWERTOOLS_SERVICE_NAME": "BEDROCK_ASYNC_SERVICE"
     }
    },
    "Handler": "lambda_function.lambda_handler",
    "Layers": [
     {
      "Ref": "Boto3Layer463A0AEA"
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:aws:lambda:",
        {
         "Ref": "AWS::Region"
        },
        ":580247275435:layer:LambdaInsightsExtension-Arm64:20"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:aws:lambda:",
        {
         "Ref": "AWS::Region"
        },
        ":017000801446:layer:AWSLambdaPowertoolsPythonV2-Arm64:69"
       ]
      ]
     }
    ],
    "MemorySize": 1024,
    "Role": {
     "Fn::GetAtt": [
      "genaibedrockfnasyncServiceRoleED3F0257",
      "Arn"
     ]
    },
    "Runtime": "python3.12",
    "Tags": [
     {
      "Key": "auto-delete",
      "Value": "false"
     },
     {
      "Key": "auto-stop",
      "Value": "false"
     }
    ],
    "Timeout": 900,
    "TracingConfig": {
     "Mode": "Active"
    }
   },
   "DependsOn": [
    "genaibedrockfnasyncServiceRoleDefaultPolicy939E6430",
    "genaibedrockfnasyncServiceRoleED3F0257"
   ],
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/genai_bedrock_fn_async/Resource",
    "aws:asset:path": "asset.6f1efd4e98059c8570288abb717723ea44d77e29b46ce7c6ff443f0e1adc2ee1",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "genaibedrockfnasyncLogRetention041F26E8": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "genaibedrockfnasync7C01F7BC"
       }
      ]
     ]
    },
    "RetentionInDays": 5
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/genai_bedrock_fn_async/LogRetention/Resource"
   }
  },
  "ChatbotUserPool01970AAD": {
   "Type": "AWS::Cognito::UserPool",
   "Properties": {
    "AccountRecoverySetting": {
     "RecoveryMechanisms": [
      {
       "Name": "verified_email",
       "Priority": 1
      }
     ]
    },
    "AdminCreateUserConfig": {
     "AllowAdminCreateUserOnly": false
    },
    "AutoVerifiedAttributes": [
     "email"
    ],
    "EmailVerificationMessage": "The verification code to your new account is {####}",
    "EmailVerificationSubject": "Verify your new account",
    "Policies": {
     "PasswordPolicy": {
      "MinimumLength": 8,
      "RequireLowercase": true,
      "RequireNumbers": true,
      "RequireSymbols": true,
      "RequireUppercase": true
     }
    },
    "SmsVerificationMessage": "The verification code to your new account is {####}",
    "UserPoolName": "ChatbotUserPool",
    "UserPoolTags": {
     "auto-delete": "false",
     "auto-stop": "false"
    },
    "UsernameAttributes": [
     "email"
    ],
    "VerificationMessageTemplate": {
     "DefaultEmailOption": "CONFIRM_WITH_CODE",
     "EmailMessage": "The verification code to your new account is {####}",
     "EmailSubject": "Verify your new account",
     "SmsMessage": "The verification code to your new account is {####}"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/ChatbotUserPool/Resource"
   }
  },
  "genaibedrockrouterfnServiceRole76C1D178": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "auto-delete",
      "Value": "false"
     },
     {
      "Key": "auto-stop",
      "Value": "false"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/genai_bedrock_router_fn/ServiceRole/Resource"
   }
  },
  "genaibedrockrouterfnServiceRoleDefaultPolicy6CEDD04B": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "xray:PutTelemetryRecords",
        "xray:PutTraceSegments"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "dynamodb:*",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "dynamodbconversationstableD07DAB94",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "ImageGenerationFunction64C380B8",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "genaibedrockagentsclientfn3E452070",
          "Arn"
         ]
        },
        {
         "Fn::GetAtt": [
          "genaibedrockfnasync7C01F7BC",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "ImageGenerationFunction64C380B8",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "genaibedrockagentsclientfn3E452070",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "genaibedrockfnasync7C01F7BC",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "genaibedrockrouterfnServiceRoleDefaultPolicy6CEDD04B",
    "Roles": [
     {
      "Ref": "genaibedrockrouterfnServiceRole76C1D178"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/genai_bedrock_router_fn/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "genaibedrockrouterfn5C0CB3B0": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Architectures": [
     "arm64"
    ],
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "b6424b87245d3f600e22fe55cde830e293c0c15ceaafca803b65e2d1297bfbc2.zip"
    },
    "Environment": {
     "Variables": {
      "USER_POOL_ID": {
       "Ref": "ChatbotUserPool01970AAD"
      },
      "REGION": {
       "Ref": "AWS::Region"
      },
      "AGENTS_FUNCTION_NAME": {
       "Ref": "genaibedrockagentsclientfn3E452070"
      },
      "BEDROCK_FUNCTION_NAME": {
       "Ref": "genaibedrockfnasync7C01F7BC"
      },
      "ALLOWLIST_DOMAIN": "@lseg.com",
      "IMAGE_GENERATION_FUNCTION_NAME": {
       "Ref": "ImageGenerationFunction64C380B8"
      },
      "POWERTOOLS_SERVICE_NAME": "BEDROCK_ROUTER"
     }
    },
    "Handler": "lambda_function.lambda_handler",
    "Layers": [
     {
      "Ref": "Boto3Layer463A0AEA"
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:aws:lambda:",
        {
         "Ref": "AWS::Region"
        },
        ":580247275435:layer:LambdaInsightsExtension-Arm64:20"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:aws:lambda:",
        {
         "Ref": "AWS::Region"
        },
        ":017000801446:layer:AWSLambdaPowertoolsPythonV2-Arm64:69"
       ]
      ]
     }
    ],
    "MemorySize": 1024,
    "Role": {
     "Fn::GetAtt": [
      "genaibedrockrouterfnServiceRole76C1D178",
      "Arn"
     ]
    },
    "Runtime": "python3.12",
    "Tags": [
     {
      "Key": "auto-delete",
      "Value": "false"
     },
     {
      "Key": "auto-stop",
      "Value": "false"
     }
    ],
    "Timeout": 20,
    "TracingConfig": {
     "Mode": "Active"
    }
   },
   "DependsOn": [
    "genaibedrockrouterfnServiceRoleDefaultPolicy6CEDD04B",
    "genaibedrockrouterfnServiceRole76C1D178"
   ],
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/genai_bedrock_router_fn/Resource",
    "aws:asset:path": "asset.b6424b87245d3f600e22fe55cde830e293c0c15ceaafca803b65e2d1297bfbc2",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "genaibedrockrouterfnLogRetention3B504175": {
   "Type": "Custom::LogRetention",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
      "Arn"
     ]
    },
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "genaibedrockrouterfn5C0CB3B0"
       }
      ]
     ]
    },
    "RetentionInDays": 5
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/genai_bedrock_router_fn/LogRetention/Resource"
   }
  },
  "ChatbotUserPoolClient7EE71D73": {
   "Type": "AWS::Cognito::UserPoolClient",
   "Properties": {
    "AllowedOAuthFlows": [
     "implicit"
    ],
    "AllowedOAuthFlowsUserPoolClient": true,
    "AllowedOAuthScopes": [
     "email",
     "openid"
    ],
    "CallbackURLs": [
     {
      "Fn::Join": [
       "",
       [
        "https://",
        {
         "Fn::GetAtt": [
          "CloudfrontDistCloudFrontDistribution82176F0F",
          "DomainName"
         ]
        }
       ]
      ]
     }
    ],
    "ClientName": "ChatbotUserPoolClient",
    "ExplicitAuthFlows": [
     "ALLOW_USER_PASSWORD_AUTH",
     "ALLOW_USER_SRP_AUTH",
     "ALLOW_REFRESH_TOKEN_AUTH"
    ],
    "LogoutURLs": [
     {
      "Fn::Join": [
       "",
       [
        "https://",
        {
         "Fn::GetAtt": [
          "CloudfrontDistCloudFrontDistribution82176F0F",
          "DomainName"
         ]
        }
       ]
      ]
     }
    ],
    "SupportedIdentityProviders": [
     "COGNITO"
    ],
    "UserPoolId": {
     "Ref": "ChatbotUserPool01970AAD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/ChatbotUserPoolClient/Resource"
   }
  },
  "ChatbotUserPoolDomainCB3B538C": {
   "Type": "AWS::Cognito::UserPoolDomain",
   "Properties": {
    "Domain": "genchatbot-qhm4y8w3-2409061110",
    "UserPoolId": {
     "Ref": "ChatbotUserPool01970AAD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/ChatbotUserPoolDomain/Resource"
   }
  },
  "s3FilesDeploymentAwsCliLayerFB4CC38C": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "Content": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "3322b7049fb0ed2b7cbb644a2ada8d1116ff80c32dca89e6ada846b5de26f961.zip"
    },
    "Description": "/opt/awscli/aws"
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/s3FilesDeployment/AwsCliLayer/Resource",
    "aws:asset:path": "asset.3322b7049fb0ed2b7cbb644a2ada8d1116ff80c32dca89e6ada846b5de26f961.zip",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "s3FilesDeploymentCustomResource9405FFC4": {
   "Type": "Custom::CDKBucketDeployment",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
      "Arn"
     ]
    },
    "SourceBucketNames": [
     {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     }
    ],
    "SourceObjectKeys": [
     "aea5e956e12e811311d90db27fb69fa90a32a4ae491e548805cbcec104adc14e.zip"
    ],
    "DestinationBucketName": {
     "Ref": "GenAiChatbotS3BucketContentB7D39361"
    },
    "Prune": true
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/s3FilesDeployment/CustomResource/Default"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/21TXW/bMAz8LXlX1I9gRfe21EGBAh0aON32GMgy42mRSUOkGxiG//sguU6cYU+8O50oCjrd6/7uy4O+XZgTL215XHpX6H4nxh6VOfG+96YuSqP7V9NB+AmBHaHKDnjFdw4rD0L43KKVqJxBdsA53kKoHcdNg+LVvjfMIKzXsagSGk9dDSj6qbVHkM1ZiG7dj+qTYVAjjC0/0Vi25J3tLvLIB+VMrfucPMSlVC/OyWM9teUhEIruswO+BVc5XFsLzBmhBPJq41iCK9rpOld8vuGlBBQnqX8W+z7Hvv9zDKrs0NRUFrp/N8U4YQKDMo2rjMDJdB/3uv8FxY7ipdaNi6ZYzlpOrcCFvqBAFcw05z90NE8gB24IebZ7J6ZK6wkMylPF+pWqHCQOTagsVeiEdP+DIWyJfHSf8QQy7wBlvvSpTHRDtXE4N4zKMKgUiXi+w0rlwNQGCyprWai+0APO8XfTNNF+7doG+nAlhJSbMc97H+O7Nye23un1iTPvUqJjl7dWmjZNnRGWTlJYHx717eJb/CVMPr03Ly0hS2it8E36Puf8LHmlL6/+TrvVoLad/Ca8WelHffd18YedW4YWxdWg87H+BSMsNb2MAwAA"
   },
   "Metadata": {
    "aws:cdk:path": "ChatbotWebsiteStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Mappings": {
  "LatestNodeRuntimeMap": {
   "af-south-1": {
    "value": "nodejs20.x"
   },
   "ap-east-1": {
    "value": "nodejs20.x"
   },
   "ap-northeast-1": {
    "value": "nodejs20.x"
   },
   "ap-northeast-2": {
    "value": "nodejs20.x"
   },
   "ap-northeast-3": {
    "value": "nodejs20.x"
   },
   "ap-south-1": {
    "value": "nodejs20.x"
   },
   "ap-south-2": {
    "value": "nodejs20.x"
   },
   "ap-southeast-1": {
    "value": "nodejs20.x"
   },
   "ap-southeast-2": {
    "value": "nodejs20.x"
   },
   "ap-southeast-3": {
    "value": "nodejs20.x"
   },
   "ap-southeast-4": {
    "value": "nodejs20.x"
   },
   "ap-southeast-5": {
    "value": "nodejs20.x"
   },
   "ap-southeast-7": {
    "value": "nodejs20.x"
   },
   "ca-central-1": {
    "value": "nodejs20.x"
   },
   "ca-west-1": {
    "value": "nodejs20.x"
   },
   "cn-north-1": {
    "value": "nodejs18.x"
   },
   "cn-northwest-1": {
    "value": "nodejs18.x"
   },
   "eu-central-1": {
    "value": "nodejs20.x"
   },
   "eu-central-2": {
    "value": "nodejs20.x"
   },
   "eu-north-1": {
    "value": "nodejs20.x"
   },
   "eu-south-1": {
    "value": "nodejs20.x"
   },
   "eu-south-2": {
    "value": "nodejs20.x"
   },
   "eu-west-1": {
    "value": "nodejs20.x"
   },
   "eu-west-2": {
    "value": "nodejs20.x"
   },
   "eu-west-3": {
    "value": "nodejs20.x"
   },
   "il-central-1": {
    "value": "nodejs20.x"
   },
   "me-central-1": {
    "value": "nodejs20.x"
   },
   "me-south-1": {
    "value": "nodejs20.x"
   },
   "mx-central-1": {
    "value": "nodejs20.x"
   },
   "sa-east-1": {
    "value": "nodejs20.x"
   },
   "us-east-1": {
    "value": "nodejs20.x"
   },
   "us-east-2": {
    "value": "nodejs20.x"
   },
   "us-west-1": {
    "value": "nodejs20.x"
   },
   "us-west-2": {
    "value": "nodejs20.x"
   }
  }
 },
 "Outputs": {
  "AWSChatBotURL": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Fn::GetAtt": [
        "CloudfrontDistCloudFrontDistribution82176F0F",
        "DomainName"
       ]
      }
     ]
    ]
   }
  },
  "region": {
   "Value": {
    "Ref": "AWS::Region"
   }
  },
  "userpoolid": {
   "Value": {
    "Ref": "ChatbotUserPool01970AAD"
   }
  },
  "userpoolclientid": {
   "Value": {
    "Ref": "ChatbotUserPoolClient7EE71D73"
   }
  },
  "websocketapiendpoint": {
   "Value": {
    "Fn::Join": [
     "",
     [
      {
       "Fn::GetAtt": [
        "ChatbotWebSocketApi72B63158",
        "ApiEndpoint"
       ]
      },
      "/ws"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-3"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-4"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      }
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "us-west-2"
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}